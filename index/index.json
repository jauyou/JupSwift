{"includedArchiveIdentifiers":["JupSwift"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/defaultretrypolicy\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/defaultretrypolicy\/retry(_:for:dueto:completion:)","title":"func retry(Request, for: Session, dueTo: any Error, completion: (RetryResult) -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/defaultretrypolicy\/adapt(_:for:completion:)","title":"func adapt(URLRequest, for: Session, completion: (Result<URLRequest, any Error>) -> Void)","type":"method"},{"path":"\/documentation\/jupswift\/defaultretrypolicy\/adapt(_:using:completion:)","title":"func adapt(URLRequest, using: RequestAdapterState, completion: (Result<URLRequest, any Error>) -> Void)","type":"method"}],"path":"\/documentation\/jupswift\/defaultretrypolicy\/requestadapter-implementations","title":"RequestAdapter Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/defaultretrypolicy","title":"DefaultRetryPolicy","type":"class"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jupswift\/jupiterapiconfig\/mode\/lite","title":"case lite","type":"case"},{"path":"\/documentation\/jupswift\/jupiterapiconfig\/mode\/pro(apikey:)","title":"case pro(apiKey: String)","type":"case"}],"path":"\/documentation\/jupswift\/jupiterapiconfig\/mode","title":"JupiterApiConfig.Mode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jupswift\/jupiterapiconfig\/version\/v1","title":"case v1","type":"case"},{"path":"\/documentation\/jupswift\/jupiterapiconfig\/version\/v2","title":"case v2","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/jupiterapiconfig\/version\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/jupiterapiconfig\/version\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/jupiterapiconfig\/version","title":"JupiterApiConfig.Version","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/jupiterapiconfig\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapiconfig\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapiconfig\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/jupswift\/jupiterapiconfig\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/jupiterapiconfig","title":"JupiterApiConfig","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/walletmanager\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/walletmanager\/addmnemonic(_:)","title":"func addMnemonic(String) async throws -> MnemonicEntry","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/addprivatekey(_:frommnemonicid:)","title":"func addPrivateKey(String, fromMnemonicID: UUID?) async throws -> PrivateKeyEntry","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/deriveandaddprivatekeyat(index:)","title":"func deriveAndAddPrivateKeyAt(index: Int) async throws -> PrivateKeyEntry","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/generatemnemonicforwallet()","title":"func generateMnemonicForWallet() async throws -> MnemonicEntry","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/getcurrentaddress()","title":"func getCurrentAddress() throws -> String","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/getcurrentprivatekey()","title":"func getCurrentPrivateKey() async throws -> String","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/getmnemonic(at:)","title":"func getMnemonic(at: Int) async throws -> String","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/getmnemonic(id:)","title":"func getMnemonic(id: UUID) async throws -> String","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/getmnemonicentryatindex(index:)","title":"func getMnemonicEntryAtIndex(index: Int) async throws -> MnemonicEntry","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/getprivatekeybase58(id:)","title":"func getPrivateKeyBase58(id: UUID) async throws -> String","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/getprivatekeysentryatindex(index:)","title":"func getPrivateKeysEntryAtIndex(index: Int) async throws -> PrivateKeyEntry","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/resetwallet()","title":"func resetWallet() async throws","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/setcurrentwalletatindex(_:)","title":"func setCurrentWalletAtIndex(Int) throws","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/signtransaction(base64transaction:)","title":"func signTransaction(base64Transaction: String) async throws -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/walletmanager\/shared","title":"static let shared: WalletManager","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/walletmanager\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/jupswift\/walletmanager\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/jupswift\/walletmanager\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/walletmanager","title":"WalletManager","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/balancesresponse\/==(_:_:)","title":"static func == (BalancesResponse, BalancesResponse) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/balancesresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/balancesresponse\/balances","title":"let balances: [String : TokenBalance]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/balancesresponse\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/balancesresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/balancesresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/balancesresponse","title":"BalancesResponse","type":"struct"},{"path":"\/documentation\/jupswift\/cancelrecurringorderrequest","title":"CancelRecurringOrderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/canceltriggerordersresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/canceltriggerordersresponse\/requestid","title":"let requestId: String","type":"property"},{"path":"\/documentation\/jupswift\/canceltriggerordersresponse\/transactions","title":"let transactions: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/canceltriggerordersresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/canceltriggerordersresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/canceltriggerordersresponse","title":"CancelTriggerOrdersResponse","type":"struct"},{"path":"\/documentation\/jupswift\/createrecurringorderrequest","title":"CreateRecurringOrderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/createtriggerorderresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/createtriggerorderresponse\/order","title":"let order: String?","type":"property"},{"path":"\/documentation\/jupswift\/createtriggerorderresponse\/requestid","title":"let requestId: String","type":"property"},{"path":"\/documentation\/jupswift\/createtriggerorderresponse\/transaction","title":"let transaction: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/createtriggerorderresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/createtriggerorderresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/createtriggerorderresponse","title":"CreateTriggerOrderResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/depth\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/depth\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/depth\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/depth","title":"Depth","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/dynamicslippagereport\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/dynamicslippagereport\/amplificationratio","title":"let amplificationRatio: String?","type":"property"},{"path":"\/documentation\/jupswift\/dynamicslippagereport\/categoryname","title":"let categoryName: String","type":"property"},{"path":"\/documentation\/jupswift\/dynamicslippagereport\/heuristicmaxslippagebps","title":"let heuristicMaxSlippageBps: Int","type":"property"},{"path":"\/documentation\/jupswift\/dynamicslippagereport\/otheramount","title":"let otherAmount: Int?","type":"property"},{"path":"\/documentation\/jupswift\/dynamicslippagereport\/simulatedincurredslippagebps","title":"let simulatedIncurredSlippageBps: Int?","type":"property"},{"path":"\/documentation\/jupswift\/dynamicslippagereport\/slippagebps","title":"let slippageBps: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/dynamicslippagereport\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/dynamicslippagereport\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/dynamicslippagereport","title":"DynamicSlippageReport","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/executeresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/executeresponse\/code","title":"let code: Int","type":"property"},{"path":"\/documentation\/jupswift\/executeresponse\/inputamountresult","title":"let inputAmountResult: String?","type":"property"},{"path":"\/documentation\/jupswift\/executeresponse\/outputamountresult","title":"let outputAmountResult: String?","type":"property"},{"path":"\/documentation\/jupswift\/executeresponse\/signature","title":"let signature: String?","type":"property"},{"path":"\/documentation\/jupswift\/executeresponse\/slot","title":"let slot: String?","type":"property"},{"path":"\/documentation\/jupswift\/executeresponse\/status","title":"let status: String","type":"property"},{"path":"\/documentation\/jupswift\/executeresponse\/swapevents","title":"let swapEvents: [SwapEvent]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/executeresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/executeresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/executeresponse","title":"ExecuteResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/extrainfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/extrainfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/extrainfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/extrainfo","title":"ExtraInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/getrecurringordersresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/getrecurringordersresponse\/all","title":"let all: [RecurringOrder]","type":"property"},{"path":"\/documentation\/jupswift\/getrecurringordersresponse\/orderstatus","title":"let orderStatus: OrderStatus","type":"property"},{"path":"\/documentation\/jupswift\/getrecurringordersresponse\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/jupswift\/getrecurringordersresponse\/totalitems","title":"let totalItems: Int","type":"property"},{"path":"\/documentation\/jupswift\/getrecurringordersresponse\/totalpages","title":"let totalPages: Int","type":"property"},{"path":"\/documentation\/jupswift\/getrecurringordersresponse\/user","title":"let user: String","type":"property"}],"path":"\/documentation\/jupswift\/getrecurringordersresponse","title":"GetRecurringOrdersResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/gettriggerordersresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/gettriggerordersresponse\/orderstatus","title":"let orderStatus: String","type":"property"},{"path":"\/documentation\/jupswift\/gettriggerordersresponse\/orders","title":"let orders: [Order]","type":"property"},{"path":"\/documentation\/jupswift\/gettriggerordersresponse\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/jupswift\/gettriggerordersresponse\/totalitems","title":"let totalItems: Int?","type":"property"},{"path":"\/documentation\/jupswift\/gettriggerordersresponse\/totalpages","title":"let totalPages: Int","type":"property"},{"path":"\/documentation\/jupswift\/gettriggerordersresponse\/user","title":"let user: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/gettriggerordersresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/gettriggerordersresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/gettriggerordersresponse","title":"GetTriggerOrdersResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/lastswappedprice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/lastswappedprice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/lastswappedprice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/lastswappedprice","title":"LastSwappedPrice","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/mnemonicentry\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/mnemonicentry\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/jupswift\/mnemonicentry\/encrypteddata","title":"let encryptedData: Data","type":"property"},{"path":"\/documentation\/jupswift\/mnemonicentry\/id","title":"let id: UUID","type":"property"}],"path":"\/documentation\/jupswift\/mnemonicentry","title":"MnemonicEntry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/newtoken\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/newtoken\/createdat","title":"let createdAt: String","type":"property"},{"path":"\/documentation\/jupswift\/newtoken\/decimals","title":"let decimals: Int","type":"property"},{"path":"\/documentation\/jupswift\/newtoken\/freezeauthority","title":"let freezeAuthority: String?","type":"property"},{"path":"\/documentation\/jupswift\/newtoken\/knownmarkets","title":"let knownMarkets: [String]","type":"property"},{"path":"\/documentation\/jupswift\/newtoken\/logouri","title":"let logoURI: String?","type":"property"},{"path":"\/documentation\/jupswift\/newtoken\/metadataupdatedat","title":"let metadataUpdatedAt: Int","type":"property"},{"path":"\/documentation\/jupswift\/newtoken\/mint","title":"let mint: String","type":"property"},{"path":"\/documentation\/jupswift\/newtoken\/mintauthority","title":"let mintAuthority: String?","type":"property"},{"path":"\/documentation\/jupswift\/newtoken\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/jupswift\/newtoken\/symbol","title":"let symbol: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/newtoken\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/newtoken\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/newtoken","title":"NewToken","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/order\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/order\/closetx","title":"let closeTx: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/createdat","title":"let createdAt: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/expiredat","title":"let expiredAt: String?","type":"property"},{"path":"\/documentation\/jupswift\/order\/inputmint","title":"let inputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/makingamount","title":"let makingAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/opentx","title":"let openTx: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/orderkey","title":"let orderKey: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/outputmint","title":"let outputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/programversion","title":"let programVersion: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/rawmakingamount","title":"let rawMakingAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/rawremainingmakingamount","title":"let rawRemainingMakingAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/rawremainingtakingamount","title":"let rawRemainingTakingAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/rawsltakingamount","title":"let rawSlTakingAmount: String?","type":"property"},{"path":"\/documentation\/jupswift\/order\/rawtakingamount","title":"let rawTakingAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/remainingmakingamount","title":"let remainingMakingAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/remainingtakingamount","title":"let remainingTakingAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/sltakingamount","title":"let slTakingAmount: String?","type":"property"},{"path":"\/documentation\/jupswift\/order\/slippagebps","title":"let slippageBps: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/status","title":"let status: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/takingamount","title":"let takingAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/trades","title":"let trades: [Trade]","type":"property"},{"path":"\/documentation\/jupswift\/order\/updatedat","title":"let updatedAt: String","type":"property"},{"path":"\/documentation\/jupswift\/order\/userpubkey","title":"let userPubkey: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/order\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/order\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/order","title":"Order","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/orderresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/orderresponse\/contextslot","title":"let contextSlot: Int?","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/dynamicslippagereport","title":"let dynamicSlippageReport: DynamicSlippageReport?","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/expireat","title":"let expireAt: String?","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/feebps","title":"let feeBps: Int","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/gasless","title":"let gasless: Bool","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/inamount","title":"let inAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/inputmint","title":"let inputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/lastvalidblockheight","title":"let lastValidBlockHeight: Int?","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/maker","title":"let maker: String?","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/otheramountthreshold","title":"let otherAmountThreshold: String","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/outamount","title":"let outAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/outputmint","title":"let outputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/platformfee","title":"let platformFee: PlatformFee?","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/priceimpactpct","title":"let priceImpactPct: String","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/prioritizationfeelamports","title":"let prioritizationFeeLamports: Int","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/prioritizationtype","title":"let prioritizationType: String?","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/quoteid","title":"let quoteId: String?","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/requestid","title":"let requestId: String","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/routeplan","title":"let routePlan: [RoutePlan]","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/slippagebps","title":"let slippageBps: Int","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/swapmode","title":"let swapMode: String","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/swaptype","title":"let swapType: String","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/taker","title":"let taker: String?","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/totaltime","title":"let totalTime: Int","type":"property"},{"path":"\/documentation\/jupswift\/orderresponse\/transaction","title":"let transaction: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/orderresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/orderresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/orderresponse","title":"OrderResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/platformfee\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/platformfee\/amount","title":"let amount: String","type":"property"},{"path":"\/documentation\/jupswift\/platformfee\/feebps","title":"let feeBps: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/platformfee\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/platformfee\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/platformfee","title":"PlatformFee","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/pricedata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/pricedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/pricedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/pricedata","title":"PriceData","type":"struct"},{"path":"\/documentation\/jupswift\/pricedepositerequest","title":"PriceDepositeRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/priceimpactratio\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/priceimpactratio\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/priceimpactratio\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/priceimpactratio","title":"PriceImpactRatio","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/priceparams\/init(depositamount:incrementusdcvalue:interval:startat:)","title":"init(depositAmount: UInt64, incrementUsdcValue: UInt64, interval: UInt64, startAt: UInt64?)","type":"init"}],"path":"\/documentation\/jupswift\/priceparams","title":"PriceParams","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/priceresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/priceresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/priceresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/priceresponse","title":"PriceResponse","type":"struct"},{"path":"\/documentation\/jupswift\/pricewithdrawrequest","title":"PriceWithdrawRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/privatekeyentry\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/privatekeyentry\/address","title":"let address: String","type":"property"},{"path":"\/documentation\/jupswift\/privatekeyentry\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/jupswift\/privatekeyentry\/encrypteddata","title":"let encryptedData: Data","type":"property"},{"path":"\/documentation\/jupswift\/privatekeyentry\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/jupswift\/privatekeyentry\/sourcemnemonicid","title":"let sourceMnemonicID: UUID?","type":"property"}],"path":"\/documentation\/jupswift\/privatekeyentry","title":"PrivateKeyEntry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/quotedprice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/quotedprice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/quotedprice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/quotedprice","title":"QuotedPrice","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringexecuteresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringexecuteresponse\/error","title":"let error: String?","type":"property"},{"path":"\/documentation\/jupswift\/recurringexecuteresponse\/order","title":"let order: String?","type":"property"},{"path":"\/documentation\/jupswift\/recurringexecuteresponse\/signature","title":"let signature: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringexecuteresponse\/status","title":"let status: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringexecuteresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/recurringexecuteresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/recurringexecuteresponse","title":"RecurringExecuteResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringorder\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringorder\/closetx","title":"let closeTx: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/createdat","title":"let createdAt: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/cyclefrequency","title":"let cycleFrequency: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/inamountpercycle","title":"let inAmountPerCycle: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/indeposited","title":"let inDeposited: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/inused","title":"let inUsed: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/inwithdrawn","title":"let inWithdrawn: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/inputmint","title":"let inputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/maxoutamount","title":"let maxOutAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/minoutamount","title":"let minOutAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/opentx","title":"let openTx: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/orderkey","title":"let orderKey: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/outreceived","title":"let outReceived: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/outwithdrawn","title":"let outWithdrawn: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/outputmint","title":"let outputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/rawinamountpercycle","title":"let rawInAmountPerCycle: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/rawindeposited","title":"let rawInDeposited: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/rawinused","title":"let rawInUsed: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/rawinwithdrawn","title":"let rawInWithdrawn: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/rawmaxoutamount","title":"let rawMaxOutAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/rawminoutamount","title":"let rawMinOutAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/rawoutreceived","title":"let rawOutReceived: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/rawoutwithdrawn","title":"let rawOutWithdrawn: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/recurringtype","title":"let recurringType: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/trades","title":"let trades: [Trade]","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/updatedat","title":"let updatedAt: String","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/userclosed","title":"let userClosed: Bool","type":"property"},{"path":"\/documentation\/jupswift\/recurringorder\/userpubkey","title":"let userPubkey: String","type":"property"}],"path":"\/documentation\/jupswift\/recurringorder","title":"RecurringOrder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/requesttransactionresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/requesttransactionresponse\/requestid","title":"let requestId: String","type":"property"},{"path":"\/documentation\/jupswift\/requesttransactionresponse\/transaction","title":"let transaction: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/requesttransactionresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/requesttransactionresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/requesttransactionresponse","title":"RequestTransactionResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/routeplan\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/routeplan\/percent","title":"let percent: Int","type":"property"},{"path":"\/documentation\/jupswift\/routeplan\/swapinfo","title":"let swapInfo: SwapInfo","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/routeplan\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/routeplan\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/routeplan","title":"RoutePlan","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/router\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/router\/icon","title":"let icon: String","type":"property"},{"path":"\/documentation\/jupswift\/router\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/jupswift\/router\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/router\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/router\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/router","title":"Router","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/shieldresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/shieldresponse\/warnings","title":"let warnings: [String : [TokenWarning]]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/shieldresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/shieldresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/shieldresponse","title":"ShieldResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/swapevent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/swapevent\/inputamount","title":"let inputAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/swapevent\/inputmint","title":"let inputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/swapevent\/outputamount","title":"let outputAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/swapevent\/outputmint","title":"let outputMint: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/swapevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/swapevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/swapevent","title":"SwapEvent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/swapinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/swapinfo\/ammkey","title":"let ammKey: String","type":"property"},{"path":"\/documentation\/jupswift\/swapinfo\/feeamount","title":"let feeAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/swapinfo\/feemint","title":"let feeMint: String","type":"property"},{"path":"\/documentation\/jupswift\/swapinfo\/inamount","title":"let inAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/swapinfo\/inputmint","title":"let inputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/swapinfo\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/jupswift\/swapinfo\/outamount","title":"let outAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/swapinfo\/outputmint","title":"let outputMint: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/swapinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/swapinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/swapinfo","title":"SwapInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/timeparams\/init(inamount:interval:maxprice:minprice:numberoforders:startat:)","title":"init(inAmount: UInt64, interval: UInt64, maxPrice: Double?, minPrice: Double?, numberOfOrders: UInt64, startAt: UInt64?)","type":"init"}],"path":"\/documentation\/jupswift\/timeparams","title":"TimeParams","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/tokenbalance\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/tokenbalance\/amount","title":"let amount: String","type":"property"},{"path":"\/documentation\/jupswift\/tokenbalance\/isfrozen","title":"let isFrozen: Bool","type":"property"},{"path":"\/documentation\/jupswift\/tokenbalance\/slot","title":"let slot: Int","type":"property"},{"path":"\/documentation\/jupswift\/tokenbalance\/uiamount","title":"let uiAmount: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/tokenbalance\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/tokenbalance\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/tokenbalance","title":"TokenBalance","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/address","title":"let address: String","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/createdat","title":"let createdAt: String","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/dailyvolume","title":"let dailyVolume: Double?","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/decimals","title":"let decimals: Int","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/extensions","title":"let extensions: [String : String]?","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/freezeauthority","title":"let freezeAuthority: String?","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/logouri","title":"let logoURI: String?","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/mintauthority","title":"let mintAuthority: String?","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/mintedat","title":"let mintedAt: String?","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/permanentdelegate","title":"let permanentDelegate: String?","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/symbol","title":"let symbol: String","type":"property"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/tags","title":"let tags: [String]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/tokeninforesponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/tokeninforesponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/tokeninforesponse","title":"TokenInfoResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/tokenwarning\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/tokenwarning\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/jupswift\/tokenwarning\/severity","title":"let severity: String","type":"property"},{"path":"\/documentation\/jupswift\/tokenwarning\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/tokenwarning\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/tokenwarning\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/tokenwarning","title":"TokenWarning","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/trade\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/trade\/action","title":"let action: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/confirmedat","title":"let confirmedAt: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/feeamount","title":"let feeAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/feemint","title":"let feeMint: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/inputamount","title":"let inputAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/inputmint","title":"let inputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/keeper","title":"let keeper: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/orderkey","title":"let orderKey: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/outputamount","title":"let outputAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/outputmint","title":"let outputMint: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/productmeta","title":"let productMeta: String?","type":"property"},{"path":"\/documentation\/jupswift\/trade\/rawfeeamount","title":"let rawFeeAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/rawinputamount","title":"let rawInputAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/rawoutputamount","title":"let rawOutputAmount: String","type":"property"},{"path":"\/documentation\/jupswift\/trade\/txid","title":"let txId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/trade\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/trade\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/trade","title":"Trade","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/triggerexecuteresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/triggerexecuteresponse\/code","title":"let code: Int","type":"property"},{"path":"\/documentation\/jupswift\/triggerexecuteresponse\/signature","title":"let signature: String","type":"property"},{"path":"\/documentation\/jupswift\/triggerexecuteresponse\/status","title":"let status: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/triggerexecuteresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/triggerexecuteresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/triggerexecuteresponse","title":"TriggerExecuteResponse","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/jupswift\/generatemnemonic()","title":"func generateMnemonic() -> String","type":"func"},{"path":"\/documentation\/jupswift\/signtransaction(base64transaction:privatekey:)-2z87a","title":"func signTransaction(base64Transaction: String, privateKey: String) -> String","type":"func"},{"path":"\/documentation\/jupswift\/signtransaction(base64transaction:privatekey:)-6tt","title":"func signTransaction(base64Transaction: String, privateKey: [UInt8]) -> String","type":"func"},{"path":"\/documentation\/jupswift\/validatemnemonicword(_:)","title":"func validateMnemonicWord(String) -> MnemonicWordValidationResult","type":"func"},{"path":"\/documentation\/jupswift\/validatemnemonics(_:)-5d51b","title":"func validateMnemonics([String]) -> Result<Void, MnemonicValidationError>","type":"func"},{"path":"\/documentation\/jupswift\/validatemnemonics(_:)-8gcgv","title":"func validateMnemonics(String) -> Result<Void, MnemonicValidationError>","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/jupswift\/cancelrecurringorderresponse","title":"CancelRecurringOrderResponse","type":"typealias"},{"path":"\/documentation\/jupswift\/canceltriggerorderresponse","title":"CancelTriggerOrderResponse","type":"typealias"},{"path":"\/documentation\/jupswift\/createrecurringorderresponse","title":"CreateRecurringOrderResponse","type":"typealias"},{"path":"\/documentation\/jupswift\/newtokenlistresponse","title":"NewTokenListResponse","type":"typealias"},{"path":"\/documentation\/jupswift\/pricedepositeresponse","title":"PriceDepositeResponse","type":"typealias"},{"path":"\/documentation\/jupswift\/pricewithdrawresponse","title":"PriceWithdrawResponse","type":"typealias"},{"path":"\/documentation\/jupswift\/taggedtokenlistresponse","title":"TaggedTokenListResponse","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/base58\/decode(_:)","title":"static func decode(String) -> [UInt8]?","type":"method"},{"path":"\/documentation\/jupswift\/base58\/encode(_:)-8yk63","title":"static func encode([UInt8]) -> String","type":"method"},{"path":"\/documentation\/jupswift\/base58\/encode(_:)-9v1lm","title":"static func encode(Data) -> String","type":"method"}],"path":"\/documentation\/jupswift\/base58","title":"Base58","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/jupiterapi\/alltokens()","title":"static func allTokens() async throws -> [TokenInfoResponse]","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/balances(account:)","title":"static func balances(account: String) async throws -> BalancesResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/cancelrecurringorder(order:user:recurringtype:)","title":"static func cancelRecurringOrder(order: String, user: String, recurringType: String) async throws -> CancelRecurringOrderResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/canceltriggerorder(maker:order:)","title":"static func cancelTriggerOrder(maker: String, order: String) async throws -> CancelTriggerOrderResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/canceltriggerorders(maker:orders:)","title":"static func cancelTriggerOrders(maker: String, orders: [String]) async throws -> CancelTriggerOrdersResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/configure(version:mode:component:)","title":"static func configure(version: JupiterApiConfig.Version, mode: JupiterApiConfig.Mode, component: String) async","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/createorder(inputmint:outputmint:makingamount:takingamount:payer:)","title":"static func createOrder(inputMint: String, outputMint: String, makingAmount: String, takingAmount: String, payer: String) async throws -> CreateTriggerOrderResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/createrecurringorder(inputmint:outputmint:params:user:)","title":"static func createRecurringOrder(inputMint: String, outputMint: String, params: RecurringParams, user: String) async throws -> CreateRecurringOrderResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/execute(signedtransaction:requestid:)","title":"static func execute(signedTransaction: String, requestId: String) async throws -> ExecuteResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/getactivetriggerorders(user:)","title":"static func getActiveTriggerOrders(user: String) async throws -> GetTriggerOrdersResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/getheaders()","title":"static func getHeaders() async -> HTTPHeaders","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/gethistorytriggerorders(user:)","title":"static func getHistoryTriggerOrders(user: String) async throws -> GetTriggerOrdersResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/getquoteurl(endpoint:)","title":"static func getQuoteURL(endpoint: String) async -> String","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/getrecurringorders(account:orderstatus:recurringtype:)","title":"static func getRecurringOrders(account: String, orderStatus: OrderStatus, recurringType: RecurringType) async throws -> GetRecurringOrdersResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/gettriggerorders(user:orderstatus:)","title":"static func getTriggerOrders(user: String, orderStatus: String) async throws -> GetTriggerOrdersResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/market(market:)","title":"static func market(market: String) async throws -> [String]","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/newtokens()","title":"static func newTokens() async throws -> NewTokenListResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/order(inputmint:outputmint:amount:taker:)","title":"static func order(inputMint: String, outputMint: String, amount: String, taker: String?) async throws -> OrderResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/price(for:baseontoken:)","title":"static func price(for: String, baseOnToken: String) async throws -> PriceResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/price(for:includeextrainfo:)","title":"static func price(for: String, includeExtraInfo: Bool) async throws -> PriceResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/pricedeposit(order:user:amount:)","title":"static func priceDeposit(order: String, user: String, amount: UInt64) async throws -> PriceDepositeResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/pricewithdraw(order:user:amount:)","title":"static func priceWithdraw(order: String, user: String, amount: UInt64) async throws -> PriceWithdrawResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/recurringexecute(requestid:signedtransaction:)","title":"static func recurringExecute(requestId: String, signedTransaction: String) async throws -> RecurringExecuteResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/routers()","title":"static func routers() async throws -> [Router]","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/shield(mints:)","title":"static func shield(mints: [String]) async throws -> ShieldResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/taggedtokens(for:)","title":"static func taggedTokens(for: String) async throws -> TaggedTokenListResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/token(mint:)","title":"static func token(mint: String) async throws -> TokenInfoResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/tradabletokens()","title":"static func tradableTokens() async throws -> [String]","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/triggerexecute(requestid:signedtransaction:)","title":"static func triggerExecute(requestId: String, signedTransaction: String) async throws -> TriggerExecuteResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/ultraswap(inputmint:outputmint:amount:)","title":"static func ultraSwap(inputMint: String, outputMint: String, amount: String) async throws -> ExecuteResponse","type":"method"},{"path":"\/documentation\/jupswift\/jupiterapi\/ultraswap(inputmint:outputmint:amount:taker:privatekey:)","title":"static func ultraSwap(inputMint: String, outputMint: String, amount: String, taker: String?, privateKey: String) async throws -> ExecuteResponse","type":"method"}],"path":"\/documentation\/jupswift\/jupiterapi","title":"JupiterApi","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jupswift\/mnemonicvalidationerror\/invalidwordcount","title":"case invalidWordCount","type":"case"},{"path":"\/documentation\/jupswift\/mnemonicvalidationerror\/invalidwords(indexes:)","title":"case invalidWords(indexes: [Int])","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/mnemonicvalidationerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/jupswift\/mnemonicvalidationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/mnemonicvalidationerror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: @autoclosure () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/jupswift\/mnemonicvalidationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/mnemonicvalidationerror","title":"MnemonicValidationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jupswift\/mnemonicwordvalidationresult\/exactmatch","title":"case exactMatch","type":"case"},{"path":"\/documentation\/jupswift\/mnemonicwordvalidationresult\/nomatch","title":"case noMatch","type":"case"},{"path":"\/documentation\/jupswift\/mnemonicwordvalidationresult\/partialmatch","title":"case partialMatch","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/mnemonicwordvalidationresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/mnemonicwordvalidationresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/mnemonicwordvalidationresult","title":"MnemonicWordValidationResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jupswift\/orderstatus\/active","title":"case active","type":"case"},{"path":"\/documentation\/jupswift\/orderstatus\/history","title":"case history","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/orderstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/orderstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/orderstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/orderstatus\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/orderstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/orderstatus\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/jupswift\/orderstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/jupswift\/orderstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/orderstatus","title":"OrderStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringparams\/price(_:)","title":"case price(PriceParams)","type":"case"},{"path":"\/documentation\/jupswift\/recurringparams\/time(_:)","title":"case time(TimeParams)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringparams\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/jupswift\/recurringparams","title":"RecurringParams","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringtype\/all","title":"case all","type":"case"},{"path":"\/documentation\/jupswift\/recurringtype\/price","title":"case price","type":"case"},{"path":"\/documentation\/jupswift\/recurringtype\/time","title":"case time","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jupswift\/recurringtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/recurringtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/jupswift\/recurringtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/jupswift\/recurringtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/recurringtype","title":"RecurringType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jupswift\/walleterror\/decodingfailed","title":"case decodingFailed","type":"case"},{"path":"\/documentation\/jupswift\/walleterror\/decryptionfailed(_:)","title":"case decryptionFailed(any Error)","type":"case"},{"path":"\/documentation\/jupswift\/walleterror\/encodingfailed","title":"case encodingFailed","type":"case"},{"path":"\/documentation\/jupswift\/walleterror\/indexoutofbounds","title":"case indexOutOfBounds","type":"case"},{"path":"\/documentation\/jupswift\/walleterror\/invalidprivatekeyformat","title":"case invalidPrivateKeyFormat","type":"case"},{"path":"\/documentation\/jupswift\/walleterror\/notfound","title":"case notFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/walleterror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/walleterror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/jupswift\/walleterror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jupswift\/walleterror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: @autoclosure () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/jupswift\/walleterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jupswift\/walleterror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/jupswift\/walleterror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/jupswift\/walleterror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/jupswift\/walleterror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/jupswift\/walleterror","title":"WalletError","type":"enum"}],"path":"\/documentation\/jupswift","title":"JupSwift","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}